name: CI

on:
  push:
    branches-ignore:
      - dependabot/*
  pull_request:
  workflow_dispatch:

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    outputs:
      package_version: ${{ steps.build_script.outputs.package_version }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"
      - name: Run build script
        id: build_script
        run: ./build.ps1 -ci
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          name: packages
          path: artifacts/
          if-no-files-found: error
      - uses: codecov/codecov-action@v3
        with:
          name: unittests-${{ matrix.os }}
          fail_ci_if_error: true
  release:
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'skip release') && github.actor != 'dependabot[bot]'
    needs: build
    runs-on: windows-latest
    env:
      PACKAGE_VERSION: ${{ needs.build.outputs.package_version }}
    steps:
      - run: echo "Releasing ${{ env.PACKAGE_VERSION }}"
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1
        with:
          nuget-version: latest
      - uses: actions/download-artifact@v4.1.7
        with:
          name: packages
          path: packages
      - name: Configure GitHub NuGet registry
        run: nuget sources add -name github -source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -username ${{ github.repository_owner }} -password ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub package registry
        run: nuget push packages\*.nupkg -ApiKey ${{ secrets.GITHUB_TOKEN }} -Source github -SkipDuplicate
      - name: Push to NuGet.org
        run: nuget push packages\*.nupkg -ApiKey ${{ secrets.NUGET_API_KEY }} -Source https://api.nuget.org/v3/index.json
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.PACKAGE_VERSION }}
          tag_name: v${{ env.PACKAGE_VERSION }}
          generate_release_notes: true
          body: |
            ## How to get this update
            Update to the latest version:

            ```
            dotnet tool update -g dotnet-serve
            ```

            Packages have been posted to these feeds:

            #### NuGet.org
            https://nuget.org/packages/dotnet-serve/${{ env.PACKAGE_VERSION }}

            #### GitHub Package Registry
            https://github.com/natemcmaster?tab=packages&repo_name=dotnet-serve

          draft: false
          prerelease: false
          files: packages/*
